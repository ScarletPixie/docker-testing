services:
  mariadb:
    container_name: inception_mariadb
    restart: always
    build:
      context: ./requirements/mariadb/
      dockerfile: Dockerfile
      args:
      - MYSQL_USER_ARG=${MYSQL_USER}
      - MYSQL_PASSWORD_ARG=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD_ARG=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATADIR_ARG=${MYSQL_DATADIR}
    volumes:
      - mariadb_vol:${MYSQL_DATADIR}
    networks:
      - mariadb_to_wordpress
    ports:
      - 3306

  wordpress:
    container_name: inception_wordpress
    restart: always
    build:
      context: ./requirements/wordpress/
      dockerfile: Dockerfile
      args:
      - MYSQL_USER_ARG=${MYSQL_USER}
      - MYSQL_PASSWORD_ARG=${MYSQL_PASSWORD}
    networks:
      - mariadb_to_wordpress
      - wordpress_to_nginx
    depends_on:
      - mariadb
    volumes:
      - wordpress_vol:/var/www/html/wordpress
    ports:
      - 9000

  nginx:
    container_name: inception_nginx
    restart: always
    build: ./requirements/nginx/
    ports:
      - 443:443
    networks:
      - nginx_to_host
      - wordpress_to_nginx
    depends_on:
      - wordpress
    volumes:
      - wordpress_vol:/var/www/html/wordpress

networks:
# mariadb <-> wordpress
  mariadb_to_wordpress:
    driver: bridge

# wordpress <-> nginx
  wordpress_to_nginx:
    driver: bridge

# nginx <-> host
  nginx_to_host:
    driver: bridge


volumes:
# mariadb databases
  mariadb_vol:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: ${MARIADB_VOL}

# wordpress website data
  wordpress_vol:
    driver: local
    driver_opts:
      type: bind
      o: bind
      device: ${WORDPRESS_VOL}